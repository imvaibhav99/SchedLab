CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -I./include
SRCDIR = src
OBJDIR = obj
TARGET = lab4_visual

# Source files for visual version
SOURCES = $(SRCDIR)/Scheduler.cpp \
          $(SRCDIR)/FCFSScheduler.cpp \
          $(SRCDIR)/RoundRobinScheduler.cpp \
          $(SRCDIR)/SPNScheduler.cpp \
          $(SRCDIR)/SRTScheduler.cpp \
          $(SRCDIR)/HRRNScheduler.cpp \
          $(SRCDIR)/FeedbackScheduler.cpp \
          $(SRCDIR)/AgingScheduler.cpp \
          $(SRCDIR)/SchedulerFactory.cpp \
          $(SRCDIR)/Visualizer.cpp \
          $(SRCDIR)/main_visual.cpp

OBJECTS = $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)

# Default target
all: $(TARGET)

# Create object directory if it doesn't exist
$(OBJDIR):
	mkdir -p $(OBJDIR)

# Compile object files
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp | $(OBJDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Link executable
$(TARGET): $(OBJECTS)
	$(CXX) $(OBJECTS) -o $(TARGET)

# Clean build files
clean:
	rm -rf $(OBJDIR) $(TARGET)

# Run with test input
test: $(TARGET)
	./$(TARGET) < testcases/01a-input.txt

# Run with custom input
demo: $(TARGET)
	@echo "Running FCFS with custom input..."
	@echo -e "trace\n1\n20\n5\nA,0,3\nB,1,6\nC,3,4\nD,5,5\nE,7,2" | ./$(TARGET)

# Run Round Robin demo
demo-rr: $(TARGET)
	@echo "Running Round Robin with quantum=2..."
	@echo -e "trace\n2-2\n20\n5\nA,0,3\nB,1,6\nC,3,4\nD,5,5\nE,7,2" | ./$(TARGET)

# Install dependencies (for macOS)
install-deps:
	# Check if g++ is installed
	@which g++ > /dev/null || (echo "Installing g++..." && xcode-select --install)

# Show all available targets
help:
	@echo "Available targets:"
	@echo "  all        - Build the visual version"
	@echo "  clean      - Remove build files"
	@echo "  test       - Run with testcase 01a"
	@echo "  demo       - Run FCFS demo"
	@echo "  demo-rr    - Run Round Robin demo"
	@echo "  help       - Show this help"

.PHONY: all clean test demo demo-rr install-deps help 